# -*- coding: utf-8 -*-
"""hacksthon.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1k5m8dmX02gCEIWwbGXyPAdTgJhUqH7Uz
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

# Define the number of rows for the dataset
num_rows = 10000

# Generate random data for the dataset
data = {
    'job_ID': np.random.randint(1000, 10000, size=num_rows),
    'designation': np.random.choice(['Software Engineer', 'Data Scientist', 'Marketing Manager', 'Sales Representative'], size=num_rows),
    'company_id': np.random.randint(1, 500, size=num_rows),
    'name': ['Company ' + str(i) for i in np.random.randint(1, 100, size=num_rows)],
    'work_type': np.random.choice(['Full-time', 'Part-time', 'Contract'], size=num_rows),
    'involvement': np.random.choice(['Low', 'Medium', 'High'], size=num_rows),
    'employees_count': np.random.randint(10, 1000, size=num_rows),
    'total_applicants': np.random.randint(0, 500, size=num_rows),
    'linkedin_followers': np.random.randint(0, 10000, size=num_rows),
    'job_details': ['Details for job ' + str(i) for i in range(1, num_rows + 1)],
    'details_id': np.arange(1, num_rows + 1),
    'industry': np.random.choice(['Technology', 'Finance', 'Healthcare', 'Retail'], size=num_rows),
    'level': np.random.choice(['Entry Level', 'Mid Level', 'Senior Level'], size=num_rows),
    'City': np.random.choice(['New York', 'San Francisco', 'Chicago', 'Los Angeles'], size=num_rows),
    'State': np.random.choice(['CA', 'NY', 'IL'], size=num_rows)
}

# Create DataFrame
df = pd.DataFrame(data)

# Save DataFrame to a CSV file
df.to_csv('big_dataset.csv', index=False)

df.head()

df.shape

"""# Analyzing LinkedIn's Success Factors"""

industry_counts = df['industry'].value_counts()
colors = ['peru','peachpuff', 'sandybrown', 'saddlebrown']
plt.figure(figsize=(10, 6))
industry_counts.plot(kind='bar', color=colors)
plt.title('Distribution of Industries')
plt.xlabel('Count')
plt.ylabel('Industry')
plt.show()

job_level_counts = df['level'].value_counts()
plt.figure(figsize=(10, 6))
job_level_counts.plot(kind='line', color='olive')
plt.title('Distribution of Job Levels')
plt.xlabel('Count')
plt.ylabel('Job Level')
plt.show()

state_counts = df['State'].value_counts()
colors = ['peru', 'peachpuff', 'olive']
plt.figure(figsize=(8, 8))
plt.pie(state_counts, labels=state_counts.index, autopct='%1.1f%%', startangle=180, colors=colors)
plt.title('Distribution of Companies by State')
plt.axis('equal')
plt.show()

"""# Market Approach"""

import matplotlib.pyplot as plt
work_type_counts = df['work_type'].value_counts()
plt.figure(figsize=(10, 6))
work_type_counts.plot(kind='line', marker='o', color='forestgreen')
plt.title('Distribution of Work Types')
plt.xlabel('Work Type')
plt.ylabel('Count')
plt.grid(True)
plt.xticks(rotation=45)
plt.tight_layout()
plt.show()

involvement_counts = df['involvement'].value_counts()
plt.figure(figsize=(10, 6))
plt.bar(involvement_counts.index, involvement_counts.values, color='lightgreen')
plt.title('Distribution of Involvement Levels')
plt.xlabel('Involvement Level')
plt.ylabel('Count')
plt.xticks(rotation=45)
plt.grid(True)
plt.tight_layout()
plt.show()

"""# Total Market Occupancy with Similar Intentions"""

colors = sns.color_palette("pastel")
plt.figure(figsize=(10, 6))
sns.countplot(y='industry', data=df, order=df['industry'].value_counts().index, palette=colors)
plt.title('Distribution of Industries for Platforms with Similar Intentions as LinkedIn')
plt.xlabel('Count')
plt.ylabel('Industry')
plt.show()

"""# Unique Deployment Strategies"""

import seaborn as sns
import matplotlib.pyplot as plt

plt.figure(figsize=(10, 6))
sns.scatterplot(x='total_applicants', y='linkedin_followers', hue='industry', data=df)
plt.title('Total Applicants vs LinkedIn Followers by Industry')
plt.xlabel('Total Applicants')
plt.ylabel('LinkedIn Followers')
plt.legend(title='Industry')
plt.show()

